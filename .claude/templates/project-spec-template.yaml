project_specification:
  metadata:
    name: "[Project Name]"
    version: "1.0.0"
    created: "[ISO timestamp]"
    last_updated: "[ISO timestamp]"
    authors: []
    reviewers: []
    status: "[draft|review|approved|deprecated]"
    
  overview:
    description: "[Brief project description]"
    objectives: []
    success_criteria: []
    constraints: []
    assumptions: []
    
  technology_stack:
    frontend:
      framework: "[chosen framework]"
      version: "[framework version]"
      libraries: []
      build_tools: []
      
    backend:
      language: "[chosen language]"
      framework: "[chosen framework]"
      version: "[framework version]"
      libraries: []
      
    database:
      type: "[SQL|NoSQL]"
      engine: "[database engine]"
      version: "[database version]"
      orm: "[ORM/ODM if applicable]"
      
    infrastructure:
      cloud_provider: "[provider name]"
      hosting: "[hosting type]"
      cdn: "[CDN provider]"
      monitoring: "[monitoring tools]"
      
    development:
      version_control: "git"
      ci_cd: "[CI/CD platform]"
      testing: []
      code_quality: []

functional_requirements:
  - id: "FR-001"
    title: "[Requirement Title]"
    description: "[Detailed requirement description]"
    priority: "[Must|Should|Could|Won't]"
    complexity: "[High|Medium|Low]"
    acceptance_criteria: []
    dependencies: []
    
non_functional_requirements:
  performance:
    response_time:
      api_simple: "[target in ms]"
      api_complex: "[target in ms]"
      page_load: "[target in ms]"
    throughput:
      concurrent_users: "[number]"
      requests_per_second: "[number]"
    scalability:
      growth_expectation: "[description]"
      scaling_approach: "[horizontal|vertical|both]"
      
  security:
    authentication: "[method]"
    authorization: "[RBAC|ABAC|other]"
    data_encryption: "[at_rest|in_transit|both]"
    compliance: []
    
  quality:
    availability: "[percentage uptime]"
    reliability: "[MTBF/MTTR requirements]"
    maintainability: "[code quality standards]"
    usability: "[accessibility standards]"

user_stories:
  epics:
    - id: "EP-001"
      title: "[Epic Title]"
      description: "[Epic description]"
      business_value: "[value statement]"
      stories: []
      
  stories:
    - id: "US-001"
      epic_id: "EP-001"
      title: "[Story title]"
      description: "As a [user] I want [functionality] so that [benefit]"
      acceptance_criteria: []
      story_points: "[estimation]"
      priority: "[High|Medium|Low]"
      dependencies: []

use_cases:
  actors:
    - id: "AC-001"
      name: "[Actor Name]"
      description: "[Actor description]"
      type: "[Primary|Secondary|System]"
      
  use_cases:
    - id: "UC-001"
      title: "[Use Case Title]"
      actors: []
      description: "[Use case description]"
      preconditions: []
      main_flow: []
      alternative_flows: []
      postconditions: []
      exceptions: []

api_specification:
  base_url: "[API base URL]"
  version: "v1"
  authentication: "[method]"
  
  resources:
    - name: "[resource name]"
      path: "[resource path]"
      description: "[resource description]"
      endpoints: []
      
  endpoints:
    - id: "EP-001"
      method: "[GET|POST|PUT|DELETE|PATCH]"
      path: "[endpoint path]"
      description: "[endpoint description]"
      parameters: []
      request_body: {}
      responses: {}
      authentication_required: true
      rate_limiting: "[limits]"

database_schema:
  entities:
    - name: "[entity name]"
      description: "[entity description]"
      attributes: []
      relationships: []
      constraints: []
      indexes: []
      
  relationships:
    - type: "[one-to-one|one-to-many|many-to-many]"
      from_entity: "[entity name]"
      to_entity: "[entity name]"
      description: "[relationship description]"
      constraints: []

system_architecture:
  components:
    - name: "[component name]"
      type: "[frontend|backend|database|external]"
      description: "[component description]"
      responsibilities: []
      interfaces: []
      dependencies: []
      
  integration_patterns:
    - type: "[REST|GraphQL|Message Queue|Event Driven]"
      description: "[integration description]"
      components: []
      data_format: "[JSON|XML|other]"
      
  deployment_architecture:
    environments: []
    scaling_strategy: "[description]"
    load_balancing: "[approach]"
    caching_strategy: "[approach]"
    monitoring_approach: "[description]"

implementation_guidance:
  development_approach: "[Agile|Waterfall|Hybrid]"
  testing_strategy:
    unit_testing: "[approach and tools]"
    integration_testing: "[approach and tools]"
    e2e_testing: "[approach and tools]"
    performance_testing: "[approach and tools]"
    
  deployment_strategy:
    environments: "[dev|staging|production]"
    ci_cd_pipeline: "[description]"
    rollback_strategy: "[approach]"
    monitoring: "[tools and approach]"
    
  quality_gates:
    code_coverage: "[minimum percentage]"
    performance_thresholds: []
    security_requirements: []
    documentation_standards: []

risks_and_mitigation:
  - id: "R-001"
    category: "[Technical|Business|Security|Performance]"
    description: "[risk description]"
    probability: "[High|Medium|Low]"
    impact: "[High|Medium|Low]"
    mitigation_strategy: "[mitigation approach]"
    contingency_plan: "[backup plan]"
    owner: "[responsible party]"

validation_criteria:
  acceptance_criteria: []
  performance_criteria: []
  security_criteria: []
  usability_criteria: []
  compliance_criteria: []